/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DatabaseSettingFrame.java
 *
 * Created on 2010-1-23, 14:33:01
 */

package email;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author root
 */
public class DatabaseSettingFrame extends javax.swing.JFrame {

    /** Creates new form DatabaseSettingFrame */
    public DatabaseSettingFrame(MailFuncInter mailinter) {
        initComponents();
        m_MailInter=mailinter;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFielduser = new javax.swing.JTextField();
        jTextFieldpass = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldname = new javax.swing.JTextField();
        jButtonTestdata = new javax.swing.JButton();
        jButtonConfig = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(email.EmailApp.class).getContext().getResourceMap(DatabaseSettingFrame.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jTextFielduser.setText(resourceMap.getString("jTextFielduser.text")); // NOI18N
        jTextFielduser.setName("jTextFielduser"); // NOI18N

        jTextFieldpass.setText(resourceMap.getString("jTextFieldpass.text")); // NOI18N
        jTextFieldpass.setName("jTextFieldpass"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jTextFieldname.setEditable(false);
        jTextFieldname.setText(resourceMap.getString("jTextFieldname.text")); // NOI18N
        jTextFieldname.setName("jTextFieldname"); // NOI18N

        jButtonTestdata.setText(resourceMap.getString("jButtonTestdata.text")); // NOI18N
        jButtonTestdata.setName("jButtonTestdata"); // NOI18N
        jButtonTestdata.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonTestdataMouseClicked(evt);
            }
        });

        jButtonConfig.setText(resourceMap.getString("jButtonConfig.text")); // NOI18N
        jButtonConfig.setName("jButtonConfig"); // NOI18N
        jButtonConfig.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonConfigMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonTestdata, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jButtonConfig, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldname, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(jTextFieldpass, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(jTextFielduser, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))))
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFielduser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTestdata)
                    .addComponent(jButtonConfig))
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonTestdataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTestdataMouseClicked
        
        try {

            if(CheckData())
            {
                //创建连接
                Connection contest;
                String userName = this.jTextFielduser.getText().trim();                                           //mysql数据库所在主机用户名
                String passWord = this.jTextFieldpass.getText().trim();                                          //密码
                String dataName=this.jTextFieldname.getText().trim();
                String url = "jdbc:mysql://localhost/"+dataName+"?";               //连接到mysql数据库
                Class.forName("com.mysql.jdbc.Driver");                             //.newInstance();	//创建类
                contest = DriverManager.getConnection(url, userName, passWord);         //创建连接
            }
            else
            {
                JOptionPane.showMessageDialog(null, "请完善信息!","提示",JOptionPane.INFORMATION_MESSAGE);
                return;
            }

        } catch (SQLException ex) {
            Logger.getLogger(DatabaseSettingFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "连接数据库失败!","提示",JOptionPane.INFORMATION_MESSAGE);
            return;
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DatabaseSettingFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "加载JDBC驱动程序失败!","提示",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
            
        JOptionPane.showMessageDialog(null, "数据库连接成功!","提示",JOptionPane.INFORMATION_MESSAGE);
       

    }//GEN-LAST:event_jButtonTestdataMouseClicked

    private void jButtonConfigMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConfigMouseClicked
        try {

            if(CheckData())
            {
                String path = "/";
                String userName = this.jTextFielduser.getText().trim();                                           //mysql数据库所在主机用户名
                String passWord = this.jTextFieldpass.getText().trim();                                          //密码
                String dataName=this.jTextFieldname.getText().trim();
                String url = "jdbc:mysql://localhost/"+dataName+"?";               //连接到mysql数据库
                String config="database user: "+userName+";\n"+"database password: "+passWord+";\n"+"connection url: "+url+";\n";
                File directory = new File(".");
                File file = new File(directory.getCanonicalPath() + path);
                if (file.exists()) {
                    //System.out.println("文件夹存在");
                } else {
                    // System.out.println("文件夹不存在，正在创建...");
                    if (file.mkdirs()) {
                        //System.out.println("文件创建成功！");
                    } else {
                        // System.out.println("文件创建失败！");
                    }
                }
                String fileName = "database.conf";
                File newfile = new File(directory.getCanonicalPath() + path + fileName);
                if (!newfile.exists())
                {
                    newfile.createNewFile();
                    BufferedWriter output = new BufferedWriter(new FileWriter(newfile, true));
                    output.write(config);
                    //output.close();
                    output.flush();
                    JOptionPane.showMessageDialog(null, "配置文件生成成功!","提示",JOptionPane.INFORMATION_MESSAGE);
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "配置文件已经存在！","提示",JOptionPane.INFORMATION_MESSAGE);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "请完善信息!","提示",JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        } catch (IOException ex)
        {
            Logger.getLogger(DatabaseSettingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonConfigMouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MailFuncInter mail=null;
                new DatabaseSettingFrame(mail).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConfig;
    private javax.swing.JButton jButtonTestdata;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextFieldname;
    private javax.swing.JTextField jTextFieldpass;
    private javax.swing.JTextField jTextFielduser;
    // End of variables declaration//GEN-END:variables
    MailFuncInter m_MailInter;

    private boolean CheckData()
    {
        if(this.jTextFielduser.getText().length()==0)
        {
            return false;
        }
        if(this.jTextFieldpass.getText().length()==0)
        {
            return false;
        }
        return true;


    }
}
